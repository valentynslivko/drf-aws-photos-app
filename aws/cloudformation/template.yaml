AWSTemplateFormatVersion: '2010-09-09'
Resources:
  MyLambdaFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName: MyLambdaFunction
      Handler: lambda_function.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: python3.10
      Code:
        S3Bucket: chi-test-task-bucket
        S3Key: lambda_function.zip
      Layers:
        - !Ref MyLambdaLayer

  MyLambdaLayer:
    Type: 'AWS::Lambda::LayerVersion'
    Properties:
      LayerName: MyLambdaLayer
      CompatibleRuntimes:
        - python3.10
      Content:
        S3Bucket: chi-test-task-bucket
        S3Key: test-task-chi-layer.zip

  LambdaExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: 'lambda.amazonaws.com'
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: LambdaPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:*'
                Resource: '*'

  # MyS3Bucket:
  #   Type: 'AWS::S3::Bucket'
  #   Properties:
  #     BucketName: chi-test-task-bucket

  # MyS3BucketPolicy:
  #   Type: 'AWS::S3::BucketPolicy'
  #   Properties:
  #     Bucket: !Ref MyS3Bucket
  #     PolicyDocument:
  #       Version: '2012-10-17'
  #       Statement:
  #         - Effect: Allow
  #           Principal: '*'
  #           Action: 's3:GetObject'
  #           Resource: !Sub arn:aws:s3:::${MyS3Bucket}/*

  ApiGatewayRestApi:
    Type: 'AWS::ApiGateway::RestApi'
    Properties:
      Name: MyApi

  ApiGatewayResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !GetAtt ApiGatewayRestApi.RootResourceId
      PathPart: myresource
      RestApiId: !Ref ApiGatewayRestApi

  ApiGatewayMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: NONE
      HttpMethod: POST
      ResourceId: !Ref ApiGatewayResource
      RestApiId: !Ref ApiGatewayRestApi
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: 
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MyLambdaFunction.Arn}/invocations

  LambdaInvokePermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !Ref MyLambdaFunction
      Principal: 'apigateway.amazonaws.com'
